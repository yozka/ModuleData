#include "DSManualControl.h"
#include <QVariant>
#include <QTime>
#include <QDateTime>

#include "DSManualControlDialog.h"
///--------------------------------------------------------------------------------------



///--------------------------------------------------------------------------------------
using namespace DataSource;
///--------------------------------------------------------------------------------------





///--------------------------------------------------------------------------------------
int gNumberManual = 0;
///--------------------------------------------------------------------------------------







 ///=====================================================================================
///
/// Constructor
/// 
/// 
///--------------------------------------------------------------------------------------
AManualControl :: AManualControl ()
	:
	mInterval(settings::interval),
	mLastTime(0),
	mData(0)
{
	gNumberManual++;
	mNumber = gNumberManual;
}
///--------------------------------------------------------------------------------------







 ///=====================================================================================
///
/// Destructor
/// 
/// 
///--------------------------------------------------------------------------------------
AManualControl :: ~AManualControl ()
{
	clear();

	if (!mWidget.isNull())
	{
		mWidget->close();
	}
}
///--------------------------------------------------------------------------------------










 ///=====================================================================================
///
/// возвратим имя источника данных
/// 
/// 
///--------------------------------------------------------------------------------------
QString AManualControl :: title() const
{
	return "Manual control - " + QString::number(mNumber);
}
///--------------------------------------------------------------------------------------








 ///=====================================================================================
///
/// покажем диалог информации по источнику данных
/// 
/// 
///--------------------------------------------------------------------------------------
void AManualControl :: show()
{
	if (mWidget.isNull())
	{
		mWidget = PManualControlDialog::create();
	}

	auto _this = qSharedPointerCast<AManualControl>(sharedFromThis());
	mWidget->show(_this);

}
///--------------------------------------------------------------------------------------







 ///=====================================================================================
///
/// ктоо подсоеденился
/// 
/// 
///--------------------------------------------------------------------------------------
void AManualControl :: onConnect()
{
	refreshWidget();
}
///--------------------------------------------------------------------------------------





 ///=====================================================================================
///
/// ктото отсоединлся
/// 
/// 
///--------------------------------------------------------------------------------------
void AManualControl :: onDisconnect()
{
	refreshWidget();
}
///--------------------------------------------------------------------------------------








 ///=====================================================================================
///
/// открытие данных
/// 
/// 
///--------------------------------------------------------------------------------------
void AManualControl :: onOpen()
{
	mLastTime = 0;
	mData = 0;
	refreshWidget();
}
///--------------------------------------------------------------------------------------








 ///=====================================================================================
///
/// закрытие данных
/// 
/// 
///--------------------------------------------------------------------------------------
void AManualControl :: onClose()
{
	mLastTime = 0;
	mData = 0;
	refreshWidget();
}
///--------------------------------------------------------------------------------------







 ///=====================================================================================
///
/// возвратим данные
/// 
/// 
///--------------------------------------------------------------------------------------
int AManualControl :: data() const
{
	return mData;
}
///--------------------------------------------------------------------------------------






 ///=====================================================================================
///
/// утсновим значение
/// 
/// 
///--------------------------------------------------------------------------------------
void AManualControl :: setData(const int value)
{
	if (value < settings::min || value > settings::max)
	{
		return;
	}
	mData = value;
	mLastTime += mInterval;

	
	if (isActive())
	{
		QList<int> data;
		data.append(mLastTime);
		data.append(mData);
		streamData->command_dataSend(QVariant::fromValue<QList<int>>(data));
	}
	refreshWidget();
}
///--------------------------------------------------------------------------------------








 ///=====================================================================================
///
/// возвратим интервал таймера
/// 
/// 
///--------------------------------------------------------------------------------------
int AManualControl :: interval() const
{
	return mInterval;
}
///--------------------------------------------------------------------------------------




 ///=====================================================================================
///
/// установим интервал таймера
/// 
/// 
///--------------------------------------------------------------------------------------
void AManualControl :: setInterval(const int value)
{
	if (value >= settings::intervalMin && value <= settings::intervalMax)
	{
		mInterval = value;
	}
}
///--------------------------------------------------------------------------------------




 ///=====================================================================================
///
/// возвратим последнее время
/// 
/// 
///--------------------------------------------------------------------------------------
int AManualControl :: lastTimeMS() const
{
	return mLastTime;
}
///--------------------------------------------------------------------------------------








 ///=====================================================================================
///
/// обновим виджет
/// 
/// 
///--------------------------------------------------------------------------------------
void AManualControl :: refreshWidget()
{
	if (!mWidget.isNull())
	{
		mWidget->refresh();
	}
}