#include "DataSource.h"
#include <QVariant>
///--------------------------------------------------------------------------------------



///--------------------------------------------------------------------------------------
using namespace DataSource;
///--------------------------------------------------------------------------------------






 ///=====================================================================================
///
/// Constructor
/// 
/// 
///--------------------------------------------------------------------------------------
ADataSource :: ADataSource ()
	:
	streamData(DataProxy::PCollectionProxy(new DataProxy::ACollectionProxy(this))),
	mActive(false),
	mRefOpen(0)
{


}
///--------------------------------------------------------------------------------------







 ///=====================================================================================
///
/// Destructor
/// 
/// 
///--------------------------------------------------------------------------------------
ADataSource :: ~ADataSource ()
{
	close();
}
///--------------------------------------------------------------------------------------






 ///=====================================================================================
///
/// принудительно закрытие данных
/// 
/// 
///--------------------------------------------------------------------------------------
void ADataSource :: close()
{
	if (mActive)
	{
		onClose();
		mActive = false;
		mRefOpen = 0;
	}
}
///--------------------------------------------------------------------------------------






 ///=====================================================================================
///
/// покажем диалог информации по источнику данных
/// 
/// 
///--------------------------------------------------------------------------------------
void ADataSource :: slot_show()
{
	show();
}
///--------------------------------------------------------------------------------------








 ///=====================================================================================
///
/// команда начало сбора данных
/// 
/// 
///--------------------------------------------------------------------------------------
void ADataSource :: command_dataOpen()
{
	mRefOpen++;

	if (!mActive)
	{
		mActive = true;
		onOpen();
	}
}
///--------------------------------------------------------------------------------------






 ///=====================================================================================
///
/// команда конца сбора данных
/// 
/// 
///--------------------------------------------------------------------------------------
void ADataSource :: command_dataClose()
{
	mRefOpen--;
	if (mRefOpen < 0)
	{
		mRefOpen = 0;
	}

	if (mRefOpen == 0)
	{
		close();
	}
}
///--------------------------------------------------------------------------------------





 ///=====================================================================================
///
/// отключаем адаптер для передачи данных
/// 
/// 
///--------------------------------------------------------------------------------------
/*
void ADataSource :: disconnectAdapter(const QSharedPointer<AAdapter> &adapter)
{
	if (mAdapters.contains(adapter))
	{
		auto old = PAdapter(adapter);
		mAdapters.removeAll(adapter);
		old->disconnectDataSource();
	}
}
*/

